"""Generated message classes for cloudkms version v1beta1.

"""
# NOTE: This file is autogenerated and should not be edited by hand.

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'cloudkms'


class AuditConfig(_messages.Message):
  """Provides the configuration for non-admin_activity logging for a service.
  Controls exemptions and specific log sub-types.

  Fields:
    auditLogConfigs: The configuration for each type of logging Next ID: 4
    exemptedMembers: Specifies the identities that are exempted from "data
      access" audit logging for the `service` specified above. Follows the
      same format of Binding.members.
    service: Specifies a service that will be enabled for audit logging. For
      example, `resourcemanager`, `storage`, `compute`. `allServices` is a
      special value that covers all services.
  """

  auditLogConfigs = _messages.MessageField('AuditLogConfig', 1, repeated=True)
  exemptedMembers = _messages.StringField(2, repeated=True)
  service = _messages.StringField(3)


class AuditLogConfig(_messages.Message):
  """Provides the configuration for a sub-type of logging.

  Enums:
    LogTypeValueValuesEnum: The log type that this config enables.

  Fields:
    exemptedMembers: Specifies the identities that are exempted from this type
      of logging Follows the same format of Binding.members.
    logType: The log type that this config enables.
  """

  class LogTypeValueValuesEnum(_messages.Enum):
    """The log type that this config enables.

    Values:
      LOG_TYPE_UNSPECIFIED: Default case. Should never be this.
      ADMIN_READ: Log admin reads
      DATA_WRITE: Log data writes
      DATA_READ: Log data reads
    """
    LOG_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    DATA_WRITE = 2
    DATA_READ = 3

  exemptedMembers = _messages.StringField(1, repeated=True)
  logType = _messages.EnumField('LogTypeValueValuesEnum', 2)


class Binding(_messages.Message):
  """Associates `members` with a `role`.

  Fields:
    members: Specifies the identities requesting access for a Cloud Platform
      resource. `members` can have the following values:  * `allUsers`: A
      special identifier that represents anyone who is    on the internet;
      with or without a Google account.  * `allAuthenticatedUsers`: A special
      identifier that represents anyone    who is authenticated with a Google
      account or a service account.  * `user:{emailid}`: An email address that
      represents a specific Google    account. For example, `alice@gmail.com`
      or `joe@example.com`.   * `serviceAccount:{emailid}`: An email address
      that represents a service    account. For example, `my-other-
      app@appspot.gserviceaccount.com`.  * `group:{emailid}`: An email address
      that represents a Google group.    For example, `admins@example.com`.  *
      `domain:{domain}`: A Google Apps domain name that represents all the
      users of that domain. For example, `google.com` or `example.com`.
    role: Role that is assigned to `members`. For example, `roles/viewer`,
      `roles/editor`, or `roles/owner`. Required
  """

  members = _messages.StringField(1, repeated=True)
  role = _messages.StringField(2)


class CloudAuditOptions(_messages.Message):
  """Write a Cloud Audit log"""


class CloudkmsProjectsLocationsGetRequest(_messages.Message):
  """A CloudkmsProjectsLocationsGetRequest object.

  Fields:
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. Resource name for the location.
  """

  locationsId = _messages.StringField(1, required=True)
  projectsId = _messages.StringField(2, required=True)


class CloudkmsProjectsLocationsKeyRingsCreateRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCreateRequest object.

  Fields:
    keyRing: A KeyRing resource to be passed as the request body.
    keyRingId: Required. It must be unique within a location and match the
      regular expression `[a-zA-Z0-9_-]{1,63}`
    locationsId: Part of `parent`. See documentation of `projectsId`.
    projectsId: Part of `parent`. Required. The resource name of the location
      associated with the KeyRings, in the format `projects/*/locations/*`.
  """

  keyRing = _messages.MessageField('KeyRing', 1)
  keyRingId = _messages.StringField(2)
  locationsId = _messages.StringField(3, required=True)
  projectsId = _messages.StringField(4, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCreateRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysCreateRequest object.

  Fields:
    cryptoKey: A CryptoKey resource to be passed as the request body.
    cryptoKeyId: Required. It must be unique within a KeyRing and match the
      regular expression `[a-zA-Z0-9_-]{1,63}`
    keyRingsId: Part of `parent`. See documentation of `projectsId`.
    locationsId: Part of `parent`. See documentation of `projectsId`.
    projectsId: Part of `parent`. Required. The name of the KeyRing associated
      with the CryptoKeys.
  """

  cryptoKey = _messages.MessageField('CryptoKey', 1)
  cryptoKeyId = _messages.StringField(2)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreateRequest(_messages.Message):
  """A
  CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreateRequest
  object.

  Fields:
    cryptoKeyVersion: A CryptoKeyVersion resource to be passed as the request
      body.
    cryptoKeysId: Part of `parent`. See documentation of `projectsId`.
    keyRingsId: Part of `parent`. See documentation of `projectsId`.
    locationsId: Part of `parent`. See documentation of `projectsId`.
    projectsId: Part of `parent`. Required. The name of the CryptoKey
      associated with the CryptoKeyVersions.
  """

  cryptoKeyVersion = _messages.MessageField('CryptoKeyVersion', 1)
  cryptoKeysId = _messages.StringField(2, required=True)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroyRequest(_messages.Message):
  """A
  CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroyRequest
  object.

  Fields:
    cryptoKeyVersionsId: Part of `name`. See documentation of `projectsId`.
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    destroyCryptoKeyVersionRequest: A DestroyCryptoKeyVersionRequest resource
      to be passed as the request body.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The resource name of the CryptoKeyVersion to
      destroy.
  """

  cryptoKeyVersionsId = _messages.StringField(1, required=True)
  cryptoKeysId = _messages.StringField(2, required=True)
  destroyCryptoKeyVersionRequest = _messages.MessageField('DestroyCryptoKeyVersionRequest', 3)
  keyRingsId = _messages.StringField(4, required=True)
  locationsId = _messages.StringField(5, required=True)
  projectsId = _messages.StringField(6, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetRequest
  object.

  Fields:
    cryptoKeyVersionsId: Part of `name`. See documentation of `projectsId`.
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the CryptoKeyVersion to get.
  """

  cryptoKeyVersionsId = _messages.StringField(1, required=True)
  cryptoKeysId = _messages.StringField(2, required=True)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsListRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsListRequest
  object.

  Fields:
    cryptoKeysId: Part of `parent`. See documentation of `projectsId`.
    keyRingsId: Part of `parent`. See documentation of `projectsId`.
    locationsId: Part of `parent`. See documentation of `projectsId`.
    pageSize: Optional limit on the number of CryptoKeyVersions to include in
      the response. Further CryptoKeyVersions can subsequently be obtained by
      including the ListCryptoKeyVersionsResponse.next_page_token in a
      subsequent request. If unspecified, the server will pick an appropriate
      default.
    pageToken: Optional pagination token, returned earlier via
      ListCryptoKeyVersionsResponse.next_page_token.
    projectsId: Part of `parent`. Required. The resource name of the CryptoKey
      to list, in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  keyRingsId = _messages.StringField(2, required=True)
  locationsId = _messages.StringField(3, required=True)
  pageSize = _messages.IntegerField(4, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(5)
  projectsId = _messages.StringField(6, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatchRequest(_messages.Message):
  """A
  CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatchRequest
  object.

  Fields:
    cryptoKeyVersion: A CryptoKeyVersion resource to be passed as the request
      body.
    cryptoKeyVersionsId: Part of `cryptoKeyVersion.name`. See documentation of
      `projectsId`.
    cryptoKeysId: Part of `cryptoKeyVersion.name`. See documentation of
      `projectsId`.
    keyRingsId: Part of `cryptoKeyVersion.name`. See documentation of
      `projectsId`.
    locationsId: Part of `cryptoKeyVersion.name`. See documentation of
      `projectsId`.
    projectsId: Part of `cryptoKeyVersion.name`. Output only. The resource
      name for this CryptoKeyVersion in the format
      `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
    updateMask: Required list of fields to be updated in this request.
  """

  cryptoKeyVersion = _messages.MessageField('CryptoKeyVersion', 1)
  cryptoKeyVersionsId = _messages.StringField(2, required=True)
  cryptoKeysId = _messages.StringField(3, required=True)
  keyRingsId = _messages.StringField(4, required=True)
  locationsId = _messages.StringField(5, required=True)
  projectsId = _messages.StringField(6, required=True)
  updateMask = _messages.StringField(7)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestoreRequest(_messages.Message):
  """A
  CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestoreRequest
  object.

  Fields:
    cryptoKeyVersionsId: Part of `name`. See documentation of `projectsId`.
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The resource name of the CryptoKeyVersion to
      restore.
    restoreCryptoKeyVersionRequest: A RestoreCryptoKeyVersionRequest resource
      to be passed as the request body.
  """

  cryptoKeyVersionsId = _messages.StringField(1, required=True)
  cryptoKeysId = _messages.StringField(2, required=True)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)
  restoreCryptoKeyVersionRequest = _messages.MessageField('RestoreCryptoKeyVersionRequest', 6)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysDecryptRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysDecryptRequest object.

  Fields:
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    decryptRequest: A DecryptRequest resource to be passed as the request
      body.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. Required. The resource name of the CryptoKey
      to use for decryption. The server will choose the appropriate version.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  decryptRequest = _messages.MessageField('DecryptRequest', 2)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysEncryptRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysEncryptRequest object.

  Fields:
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    encryptRequest: A EncryptRequest resource to be passed as the request
      body.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. Required. The resource name of the CryptoKey
      or CryptoKeyVersion to use for encryption.  If a CryptoKey is specified,
      the server will use its primary version.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  encryptRequest = _messages.MessageField('EncryptRequest', 2)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysGetIamPolicyRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysGetIamPolicyRequest object.

  Fields:
    cryptoKeysId: Part of `resource`. See documentation of `projectsId`.
    keyRingsId: Part of `resource`. See documentation of `projectsId`.
    locationsId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy is being requested. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  keyRingsId = _messages.StringField(2, required=True)
  locationsId = _messages.StringField(3, required=True)
  projectsId = _messages.StringField(4, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysGetRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysGetRequest object.

  Fields:
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the CryptoKey to get.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  keyRingsId = _messages.StringField(2, required=True)
  locationsId = _messages.StringField(3, required=True)
  projectsId = _messages.StringField(4, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysListRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysListRequest object.

  Fields:
    keyRingsId: Part of `parent`. See documentation of `projectsId`.
    locationsId: Part of `parent`. See documentation of `projectsId`.
    pageSize: Optional limit on the number of CryptoKeys to include in the
      response.  Further CryptoKeys can subsequently be obtained by including
      the ListCryptoKeysResponse.next_page_token in a subsequent request.  If
      unspecified, the server will pick an appropriate default.
    pageToken: Optional pagination token, returned earlier via
      ListCryptoKeysResponse.next_page_token.
    projectsId: Part of `parent`. Required. The resource name of the KeyRing
      to list, in the format `projects/*/locations/*/keyRings/*`.
  """

  keyRingsId = _messages.StringField(1, required=True)
  locationsId = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  projectsId = _messages.StringField(5, required=True)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysPatchRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysPatchRequest object.

  Fields:
    cryptoKey: A CryptoKey resource to be passed as the request body.
    cryptoKeysId: Part of `cryptoKey.name`. See documentation of `projectsId`.
    keyRingsId: Part of `cryptoKey.name`. See documentation of `projectsId`.
    locationsId: Part of `cryptoKey.name`. See documentation of `projectsId`.
    projectsId: Part of `cryptoKey.name`. Output only. The resource name for
      this CryptoKey in the format
      `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
    updateMask: Required list of fields to be updated in this request.
  """

  cryptoKey = _messages.MessageField('CryptoKey', 1)
  cryptoKeysId = _messages.StringField(2, required=True)
  keyRingsId = _messages.StringField(3, required=True)
  locationsId = _messages.StringField(4, required=True)
  projectsId = _messages.StringField(5, required=True)
  updateMask = _messages.StringField(6)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysSetIamPolicyRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysSetIamPolicyRequest object.

  Fields:
    cryptoKeysId: Part of `resource`. See documentation of `projectsId`.
    keyRingsId: Part of `resource`. See documentation of `projectsId`.
    locationsId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy is being specified. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  keyRingsId = _messages.StringField(2, required=True)
  locationsId = _messages.StringField(3, required=True)
  projectsId = _messages.StringField(4, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 5)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysTestIamPermissionsRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysTestIamPermissionsRequest
  object.

  Fields:
    cryptoKeysId: Part of `resource`. See documentation of `projectsId`.
    keyRingsId: Part of `resource`. See documentation of `projectsId`.
    locationsId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy detail is being requested. `resource` is usually specified as a
      path. For example, a Project resource is specified as
      `projects/{project}`.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  keyRingsId = _messages.StringField(2, required=True)
  locationsId = _messages.StringField(3, required=True)
  projectsId = _messages.StringField(4, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 5)


class CloudkmsProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersionRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersionRequest
  object.

  Fields:
    cryptoKeysId: Part of `name`. See documentation of `projectsId`.
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The resource name of the CryptoKey to update.
    updateCryptoKeyPrimaryVersionRequest: A
      UpdateCryptoKeyPrimaryVersionRequest resource to be passed as the
      request body.
  """

  cryptoKeysId = _messages.StringField(1, required=True)
  keyRingsId = _messages.StringField(2, required=True)
  locationsId = _messages.StringField(3, required=True)
  projectsId = _messages.StringField(4, required=True)
  updateCryptoKeyPrimaryVersionRequest = _messages.MessageField('UpdateCryptoKeyPrimaryVersionRequest', 5)


class CloudkmsProjectsLocationsKeyRingsGetIamPolicyRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsGetIamPolicyRequest object.

  Fields:
    keyRingsId: Part of `resource`. See documentation of `projectsId`.
    locationsId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy is being requested. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
  """

  keyRingsId = _messages.StringField(1, required=True)
  locationsId = _messages.StringField(2, required=True)
  projectsId = _messages.StringField(3, required=True)


class CloudkmsProjectsLocationsKeyRingsGetRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsGetRequest object.

  Fields:
    keyRingsId: Part of `name`. See documentation of `projectsId`.
    locationsId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the KeyRing to get.
  """

  keyRingsId = _messages.StringField(1, required=True)
  locationsId = _messages.StringField(2, required=True)
  projectsId = _messages.StringField(3, required=True)


class CloudkmsProjectsLocationsKeyRingsListRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsListRequest object.

  Fields:
    locationsId: Part of `parent`. See documentation of `projectsId`.
    pageSize: Optional limit on the number of KeyRings to include in the
      response.  Further KeyRings can subsequently be obtained by including
      the ListKeyRingsResponse.next_page_token in a subsequent request.  If
      unspecified, the server will pick an appropriate default.
    pageToken: Optional pagination token, returned earlier via
      ListKeyRingsResponse.next_page_token.
    projectsId: Part of `parent`. Required. The resource name of the location
      associated with the KeyRings, in the format `projects/*/locations/*`.
  """

  locationsId = _messages.StringField(1, required=True)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  projectsId = _messages.StringField(4, required=True)


class CloudkmsProjectsLocationsKeyRingsSetIamPolicyRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsSetIamPolicyRequest object.

  Fields:
    keyRingsId: Part of `resource`. See documentation of `projectsId`.
    locationsId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy is being specified. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  keyRingsId = _messages.StringField(1, required=True)
  locationsId = _messages.StringField(2, required=True)
  projectsId = _messages.StringField(3, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 4)


class CloudkmsProjectsLocationsKeyRingsTestIamPermissionsRequest(_messages.Message):
  """A CloudkmsProjectsLocationsKeyRingsTestIamPermissionsRequest object.

  Fields:
    keyRingsId: Part of `resource`. See documentation of `projectsId`.
    locationsId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy detail is being requested. `resource` is usually specified as a
      path. For example, a Project resource is specified as
      `projects/{project}`.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  keyRingsId = _messages.StringField(1, required=True)
  locationsId = _messages.StringField(2, required=True)
  projectsId = _messages.StringField(3, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 4)


class CloudkmsProjectsLocationsListRequest(_messages.Message):
  """A CloudkmsProjectsLocationsListRequest object.

  Fields:
    filter: The standard list filter.
    pageSize: The standard list page size.
    pageToken: The standard list page token.
    projectsId: Part of `name`. The resource that owns the locations
      collection, if applicable.
  """

  filter = _messages.StringField(1)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  projectsId = _messages.StringField(4, required=True)


class Condition(_messages.Message):
  """A condition to be met.

  Enums:
    IamValueValuesEnum: Trusted attributes supplied by the IAM system.
    OpValueValuesEnum: An operator to apply the subject with.
    SysValueValuesEnum: Trusted attributes supplied by any service that owns
      resources and uses the IAM system for access control.

  Fields:
    iam: Trusted attributes supplied by the IAM system.
    op: An operator to apply the subject with.
    svc: Trusted attributes discharged by the service.
    sys: Trusted attributes supplied by any service that owns resources and
      uses the IAM system for access control.
    value: DEPRECATED. Use 'values' instead.
    values: The objects of the condition. This is mutually exclusive with
      'value'.
  """

  class IamValueValuesEnum(_messages.Enum):
    """Trusted attributes supplied by the IAM system.

    Values:
      NO_ATTR: Default non-attribute.
      AUTHORITY: Either principal or (if present) authority selector.
      ATTRIBUTION: The principal (even if an authority selector is present),
        which must only be used for attribution, not authorization.
    """
    NO_ATTR = 0
    AUTHORITY = 1
    ATTRIBUTION = 2

  class OpValueValuesEnum(_messages.Enum):
    """An operator to apply the subject with.

    Values:
      NO_OP: Default no-op.
      EQUALS: DEPRECATED. Use IN instead.
      NOT_EQUALS: DEPRECATED. Use NOT_IN instead.
      IN: Set-inclusion check.
      NOT_IN: Set-exclusion check.
      DISCHARGED: Subject is discharged
    """
    NO_OP = 0
    EQUALS = 1
    NOT_EQUALS = 2
    IN = 3
    NOT_IN = 4
    DISCHARGED = 5

  class SysValueValuesEnum(_messages.Enum):
    """Trusted attributes supplied by any service that owns resources and uses
    the IAM system for access control.

    Values:
      NO_ATTR: Default non-attribute type
      REGION: Region of the resource
      SERVICE: Service name
      NAME: Resource name
      IP: IP address of the caller
    """
    NO_ATTR = 0
    REGION = 1
    SERVICE = 2
    NAME = 3
    IP = 4

  iam = _messages.EnumField('IamValueValuesEnum', 1)
  op = _messages.EnumField('OpValueValuesEnum', 2)
  svc = _messages.StringField(3)
  sys = _messages.EnumField('SysValueValuesEnum', 4)
  value = _messages.StringField(5)
  values = _messages.StringField(6, repeated=True)


class CounterOptions(_messages.Message):
  """Options for counters

  Fields:
    field: The field value to attribute.
    metric: The metric to update.
  """

  field = _messages.StringField(1)
  metric = _messages.StringField(2)


class CryptoKey(_messages.Message):
  """A CryptoKey represents a logical key that can be used for cryptographic
  operations.  A CryptoKey is made up of one or more versions, which represent
  the actual key material used in cryptographic operations.

  Enums:
    PurposeValueValuesEnum: The immutable purpose of this CryptoKey.
      Currently, the only acceptable purpose is ENCRYPT_DECRYPT.

  Fields:
    createTime: Output only. The time at which this CryptoKey was created.
    name: Output only. The resource name for this CryptoKey in the format
      `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
    nextRotationTime: At next_rotation_time, the Key Management Service will
      automatically:  1. Create a new version of this CryptoKey. 2. Mark the
      new version as primary.  Key rotations performed manually via
      CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect
      next_rotation_time.
    primary: Output only. A copy of the "primary" CryptoKeyVersion that will
      be used by Encrypt when this CryptoKey is given in EncryptRequest.name.
      The CryptoKey's primary version can be updated via
      UpdateCryptoKeyPrimaryVersion.
    purpose: The immutable purpose of this CryptoKey. Currently, the only
      acceptable purpose is ENCRYPT_DECRYPT.
    rotationPeriod: next_rotation_time will be advanced by this period when
      the service automatically rotates a key. Must be at least one day.  If
      rotation_period is set, next_rotation_time must also be set.
  """

  class PurposeValueValuesEnum(_messages.Enum):
    """The immutable purpose of this CryptoKey. Currently, the only acceptable
    purpose is ENCRYPT_DECRYPT.

    Values:
      CRYPTO_KEY_PURPOSE_UNSPECIFIED: Not specified.
      ENCRYPT_DECRYPT: CryptoKeys with this purpose may be used with Encrypt
        and Decrypt.
    """
    CRYPTO_KEY_PURPOSE_UNSPECIFIED = 0
    ENCRYPT_DECRYPT = 1

  createTime = _messages.StringField(1)
  name = _messages.StringField(2)
  nextRotationTime = _messages.StringField(3)
  primary = _messages.MessageField('CryptoKeyVersion', 4)
  purpose = _messages.EnumField('PurposeValueValuesEnum', 5)
  rotationPeriod = _messages.StringField(6)


class CryptoKeyVersion(_messages.Message):
  """A CryptoKeyVersion represents an individual cryptographic key, and the
  associated key material.  It can be used for cryptographic operations either
  directly, or via its parent CryptoKey, in which case the server will choose
  the appropriate version for the operation.

  Enums:
    StateValueValuesEnum: The current state of the CryptoKeyVersion.

  Fields:
    createTime: Output only. The time at which this CryptoKeyVersion was
      created.
    destroyEventTime: Output only. The time this CryptoKeyVersion's key
      material was destroyed. Only present if state is DESTROYED.
    destroyTime: Output only. The time this CryptoKeyVersion's key material is
      scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
    name: Output only. The resource name for this CryptoKeyVersion in the
      format
      `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
    state: The current state of the CryptoKeyVersion.
  """

  class StateValueValuesEnum(_messages.Enum):
    """The current state of the CryptoKeyVersion.

    Values:
      CRYPTO_KEY_VERSION_STATE_UNSPECIFIED: Not specified.
      ENABLED: This version may be used in Encrypt and Decrypt requests.
      DISABLED: This version may not be used, but the key material is still
        available, and the version can be placed back into the ENABLED state.
      DESTROYED: This version is destroyed, and the key material is no longer
        stored. A version may not leave this state once entered.
      DESTROY_SCHEDULED: This version is scheduled for destruction, and will
        be destroyed soon. Call RestoreCryptoKeyVersion to put it back into
        the DISABLED state.
    """
    CRYPTO_KEY_VERSION_STATE_UNSPECIFIED = 0
    ENABLED = 1
    DISABLED = 2
    DESTROYED = 3
    DESTROY_SCHEDULED = 4

  createTime = _messages.StringField(1)
  destroyEventTime = _messages.StringField(2)
  destroyTime = _messages.StringField(3)
  name = _messages.StringField(4)
  state = _messages.EnumField('StateValueValuesEnum', 5)


class DataAccessOptions(_messages.Message):
  """Write a Data Access (Gin) log"""


class DecryptRequest(_messages.Message):
  """Request message for KeyManagementService.Decrypt.

  Fields:
    additionalAuthenticatedData: Optional data that must match the data
      originally supplied in EncryptRequest.additional_authenticated_data.
    ciphertext: Required. The encrypted data originally returned in
      EncryptResponse.ciphertext.
  """

  additionalAuthenticatedData = _messages.BytesField(1)
  ciphertext = _messages.BytesField(2)


class DecryptResponse(_messages.Message):
  """Response message for KeyManagementService.Decrypt.

  Fields:
    plaintext: The decrypted data originally supplied in
      EncryptRequest.plaintext.
  """

  plaintext = _messages.BytesField(1)


class DestroyCryptoKeyVersionRequest(_messages.Message):
  """Request message for KeyManagementService.DestroyCryptoKeyVersion."""


class EncryptRequest(_messages.Message):
  """Request message for KeyManagementService.Encrypt.

  Fields:
    additionalAuthenticatedData: Optional data that, if specified, must also
      be provided during decryption through
      DecryptRequest.additional_authenticated_data.  Must be no larger than
      64KiB.
    plaintext: Required. The data to encrypt. Must be no larger than 64KiB.
  """

  additionalAuthenticatedData = _messages.BytesField(1)
  plaintext = _messages.BytesField(2)


class EncryptResponse(_messages.Message):
  """Response message for KeyManagementService.Encrypt.

  Fields:
    ciphertext: The encrypted data.
    name: The resource name of the CryptoKeyVersion used in encryption.
  """

  ciphertext = _messages.BytesField(1)
  name = _messages.StringField(2)


class KeyRing(_messages.Message):
  """A KeyRing is a toplevel logical grouping of CryptoKeys.

  Fields:
    createTime: Output only. The time at which this KeyRing was created.
    name: Output only. The resource name for the KeyRing in the format
      `projects/*/locations/*/keyRings/*`.
  """

  createTime = _messages.StringField(1)
  name = _messages.StringField(2)


class ListCryptoKeyVersionsResponse(_messages.Message):
  """Response message for KeyManagementService.ListCryptoKeyVersions.

  Fields:
    cryptoKeyVersions: The list of CryptoKeyVersions.
    nextPageToken: A token to retrieve next page of results. Pass this value
      in ListCryptoKeyVersionsRequest.page_token to retrieve the next page of
      results.
    totalSize: The total number of CryptoKeyVersions that matched the query.
  """

  cryptoKeyVersions = _messages.MessageField('CryptoKeyVersion', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  totalSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)


class ListCryptoKeysResponse(_messages.Message):
  """Response message for KeyManagementService.ListCryptoKeys.

  Fields:
    cryptoKeys: The list of CryptoKeys.
    nextPageToken: A token to retrieve next page of results. Pass this value
      in ListCryptoKeysRequest.page_token to retrieve the next page of
      results.
    totalSize: The total number of CryptoKeys that matched the query.
  """

  cryptoKeys = _messages.MessageField('CryptoKey', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  totalSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)


class ListKeyRingsResponse(_messages.Message):
  """Response message for KeyManagementService.ListKeyRings.

  Fields:
    keyRings: The list of KeyRings.
    nextPageToken: A token to retrieve next page of results. Pass this value
      in ListKeyRingsRequest.page_token to retrieve the next page of results.
    totalSize: The total number of KeyRings that matched the query.
  """

  keyRings = _messages.MessageField('KeyRing', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  totalSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)


class ListLocationsResponse(_messages.Message):
  """The response message for Locations.ListLocations.

  Fields:
    locations: A list of locations that matches the specified filter in the
      request.
    nextPageToken: The standard List next-page token.
  """

  locations = _messages.MessageField('Location', 1, repeated=True)
  nextPageToken = _messages.StringField(2)


class Location(_messages.Message):
  """A resource that represents Google Cloud Platform location.

  Messages:
    LabelsValue: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    MetadataValue: Service-specific metadata. For example the available
      capacity at the given location.

  Fields:
    labels: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    locationId: The canonical id for this location. For example: `"us-east1"`.
    metadata: Service-specific metadata. For example the available capacity at
      the given location.
    name: Resource name for the location, which may vary between
      implementations. For example: `"projects/example-project/locations/us-
      east1"`
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    """Cross-service attributes for the location. For example
    {"cloud.googleapis.com/region": "us-east1"}

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    """Service-specific metadata. For example the available capacity at the
    given location.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  labels = _messages.MessageField('LabelsValue', 1)
  locationId = _messages.StringField(2)
  metadata = _messages.MessageField('MetadataValue', 3)
  name = _messages.StringField(4)


class LogConfig(_messages.Message):
  """Specifies what kind of log the caller must write Increment a streamz
  counter with the specified metric and field names.  Metric names should
  start with a '/', generally be lowercase-only, and end in "_count". Field
  names should not contain an initial slash. The actual exported metric names
  will have "/iam/policy" prepended.  Field names correspond to IAM request
  parameters and field values are their respective values.  At present the
  only supported field names are    - "iam_principal", corresponding to
  IAMContext.principal;    - "" (empty string), resulting in one aggretated
  counter with no field.  Examples:   counter { metric: "/debug_access_count"
  field: "iam_principal" }   ==> increment counter
  /iam/policy/backend_debug_access_count
  {iam_principal=[value of IAMContext.principal]}  At this time we do not
  support: * multiple field names (though this may be supported in the future)
  * decrementing the counter * incrementing it by anything other than 1

  Fields:
    cloudAudit: Cloud audit options.
    counter: Counter options.
    dataAccess: Data access options.
  """

  cloudAudit = _messages.MessageField('CloudAuditOptions', 1)
  counter = _messages.MessageField('CounterOptions', 2)
  dataAccess = _messages.MessageField('DataAccessOptions', 3)


class Policy(_messages.Message):
  """Defines an Identity and Access Management (IAM) policy. It is used to
  specify access control policies for Cloud Platform resources.   A `Policy`
  consists of a list of `bindings`. A `Binding` binds a list of `members` to a
  `role`, where the members can be user accounts, Google groups, Google
  domains, and service accounts. A `role` is a named list of permissions
  defined by IAM.  **Example**      {       "bindings": [         {
  "role": "roles/owner",           "members": [
  "user:mike@example.com",             "group:admins@example.com",
  "domain:google.com",             "serviceAccount:my-other-
  app@appspot.gserviceaccount.com",           ]         },         {
  "role": "roles/viewer",           "members": ["user:sean@example.com"]
  }       ]     }  For a description of IAM and its features, see the [IAM
  developer's guide](https://cloud.google.com/iam).

  Fields:
    auditConfigs: Specifies audit logging configs for "data access". "data
      access": generally refers to data reads/writes and admin reads. "admin
      activity": generally refers to admin writes.  Note: `AuditConfig`
      doesn't apply to "admin activity", which always enables audit logging.
    bindings: Associates a list of `members` to a `role`. Multiple `bindings`
      must not be specified for the same `role`. `bindings` with no members
      will result in an error.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy.  If no `etag` is provided in the call to `setIamPolicy`, then
      the existing policy is overwritten blindly.
    iamOwned: A boolean attribute.
    rules: If more than one rule is specified, the rules are applied in the
      following manner: - All matching LOG rules are always applied. - If any
      DENY/DENY_WITH_LOG rule matches, permission is denied.   Logging will be
      applied if one or more matching rule requires logging. - Otherwise, if
      any ALLOW/ALLOW_WITH_LOG rule matches, permission is   granted.
      Logging will be applied if one or more matching rule requires logging. -
      Otherwise, if no rule applies, permission is denied.
    version: Version of the `Policy`. The default version is 0.
  """

  auditConfigs = _messages.MessageField('AuditConfig', 1, repeated=True)
  bindings = _messages.MessageField('Binding', 2, repeated=True)
  etag = _messages.BytesField(3)
  iamOwned = _messages.BooleanField(4)
  rules = _messages.MessageField('Rule', 5, repeated=True)
  version = _messages.IntegerField(6, variant=_messages.Variant.INT32)


class RestoreCryptoKeyVersionRequest(_messages.Message):
  """Request message for KeyManagementService.RestoreCryptoKeyVersion."""


class Rule(_messages.Message):
  """A rule to be applied in a Policy.

  Enums:
    ActionValueValuesEnum: Required

  Fields:
    action: Required
    conditions: Additional restrictions that must be met
    description: Human-readable description of the rule.
    in_: If one or more 'in' clauses are specified, the rule matches if the
      PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
    logConfig: The config returned to callers of tech.iam.IAM.CheckPolicy for
      any entries that match the LOG action.
    notIn: If one or more 'not_in' clauses are specified, the rule matches if
      the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format
      for in and not_in entries is the same as for members in a Binding (see
      google/iam/v1/policy.proto).
    permissions: A permission is a string of form '<service>.<resource
      type>.<verb>' (e.g., 'storage.buckets.list'). A value of '*' matches all
      permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches
      all verbs.
  """

  class ActionValueValuesEnum(_messages.Enum):
    """Required

    Values:
      NO_ACTION: Default no action.
      ALLOW: Matching 'Entries' grant access.
      ALLOW_WITH_LOG: Matching 'Entries' grant access and the caller promises
        to log the request per the returned log_configs.
      DENY: Matching 'Entries' deny access.
      DENY_WITH_LOG: Matching 'Entries' deny access and the caller promises to
        log the request per the returned log_configs.
      LOG: Matching 'Entries' tell IAM.Check callers to generate logs.
    """
    NO_ACTION = 0
    ALLOW = 1
    ALLOW_WITH_LOG = 2
    DENY = 3
    DENY_WITH_LOG = 4
    LOG = 5

  action = _messages.EnumField('ActionValueValuesEnum', 1)
  conditions = _messages.MessageField('Condition', 2, repeated=True)
  description = _messages.StringField(3)
  in_ = _messages.StringField(4, repeated=True)
  logConfig = _messages.MessageField('LogConfig', 5, repeated=True)
  notIn = _messages.StringField(6, repeated=True)
  permissions = _messages.StringField(7, repeated=True)


class SetIamPolicyRequest(_messages.Message):
  """Request message for `SetIamPolicy` method.

  Fields:
    policy: REQUIRED: The complete policy to be applied to the `resource`. The
      size of the policy is limited to a few 10s of KB. An empty policy is a
      valid policy but certain Cloud Platform services (such as Projects)
      might reject them.
    updateMask: OPTIONAL: A FieldMask specifying which fields of the policy to
      modify. Only the fields in the mask will be modified. If no mask is
      provided, a default mask is used: paths: "bindings, etag" This field is
      only used by Cloud IAM.
  """

  policy = _messages.MessageField('Policy', 1)
  updateMask = _messages.StringField(2)


class StandardQueryParameters(_messages.Message):
  """Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    bearer_token: OAuth bearer token.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    pp: Pretty-print response.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    """Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    """V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default=u'json')
  bearer_token = _messages.StringField(4)
  callback = _messages.StringField(5)
  fields = _messages.StringField(6)
  key = _messages.StringField(7)
  oauth_token = _messages.StringField(8)
  pp = _messages.BooleanField(9, default=True)
  prettyPrint = _messages.BooleanField(10, default=True)
  quotaUser = _messages.StringField(11)
  trace = _messages.StringField(12)
  uploadType = _messages.StringField(13)
  upload_protocol = _messages.StringField(14)


class TestIamPermissionsRequest(_messages.Message):
  """Request message for `TestIamPermissions` method.

  Fields:
    permissions: The set of permissions to check for the `resource`.
      Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
      For more information see [IAM
      Overview](https://cloud.google.com/iam/docs/overview#permissions).
  """

  permissions = _messages.StringField(1, repeated=True)


class TestIamPermissionsResponse(_messages.Message):
  """Response message for `TestIamPermissions` method.

  Fields:
    permissions: A subset of `TestPermissionsRequest.permissions` that the
      caller is allowed.
  """

  permissions = _messages.StringField(1, repeated=True)


class UpdateCryptoKeyPrimaryVersionRequest(_messages.Message):
  """Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion.

  Fields:
    cryptoKeyVersionId: The id of the child CryptoKeyVersion to use as
      primary.
  """

  cryptoKeyVersionId = _messages.StringField(1)


encoding.AddCustomJsonFieldMapping(
    Rule, 'in_', 'in',
    package=u'cloudkms')
encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv',
    package=u'cloudkms')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1',
    package=u'cloudkms')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2',
    package=u'cloudkms')
