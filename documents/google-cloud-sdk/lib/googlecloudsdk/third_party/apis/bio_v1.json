{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "bio:v1",
  "name": "bio",
  "canonicalName": "Bio",
  "version": "v1",
  "revision": "0",
  "title": "Bio API",
  "description": "Stores, processes, explores and shares biological data.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/genomics/",
  "protocol": "rest",
  "rootUrl": "https://bio.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://bio.googleapis.com/",
  "batchPath": "batch",
  "version_module": "True",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations\/some\/unique\/name`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https:\/\/github.com\/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security\/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "RunDeepVariantV1alphaRequest": {
      "id": "RunDeepVariantV1alphaRequest",

      "type": "object",
      "properties": {
        "sampleName": {
          "description": "Required. Sample name.",
          "type": "string"
        },
        "sampleId": {
          "description": "The sample ID. Unset by default. This is used as the 'LB' field in the @RG\nheaders for any output BAM files.",
          "type": "string"
        },
        "readGroupId": {
          "description": "The read group ID (the 'ID' in a BAM @RG header). Defaults to 'none'.",
          "type": "string"
        },
        "platform": {
          "description": "The platform used to generate the data (the 'PL' in a BAM @RG header), for\nexample 'Illumina'. Unset by default.",
          "type": "string"
        },
        "sequencingCenter": {
          "description": "The sequencing center producing the reads (the 'CN' in a BAM @RG header).\nUnset by default.",
          "type": "string"
        },
        "outputPath": {
          "description": "Required. The Google Cloud Storage path for copying the final output files.\nFor example, 'gs:\/\/<user_bucket>\/<sample_name>\/'.",
          "type": "string"
        },
        "inputFastq1": {
          "description": "List of Google Cloud Storage paths of forward strand FASTQ.\nThe pairs of FASTQ files must occur at the same position in both lists.\ne.g.:\n\n  input_fastq1s = ['lane1_1.fastq', 'lane2_1.fastq', 'lane3_1.fastq']\n  input_fastq2s = ['lane1_2.fastq', 'lane2_2.fastq', 'lane3_2.fastq']",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputFastq2": {
          "description": "List of Google Cloud Storage paths of reverse strand FASTQ.\nThe pairs of FASTQ files must occur at the same position in both lists.\ne.g.:\n\n  input_fastq1s = ['lane1_1.fastq', 'lane2_1.fastq', 'lane3_1.fastq']\n  input_fastq2s = ['lane1_2.fastq', 'lane2_2.fastq', 'lane3_2.fastq']",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "description": "Common pipeline options.",
          "$ref": "PipelineOptions"
        }
      }
    },
    "PipelineOptions": {
      "id": "PipelineOptions",
      "description": "Common pipeline options.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "User-settable labels. Applied to the Operation and any associated pipeline\nresources, e.g. GCE VMs (if any).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "computeZones": {
          "description": "Google Compute Engine availability zones in which the workflow should start\nworker virtual machines, if any are needed for this particular workflow.\nMust be valid Google Compute Engine zone names, for example \"us-east1-d\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requestId": {
          "description": "Optional. If non-empty then requests are idempotent in that\nsending a second RunWorkflowRequest with the same project_id and request_id\nwill return the name of the same already-running operation, instead of\nstarting another.\nDo not reuse request_ids. Reusing a (project_id, request_id) for a\ndifferent request will result in an error.\nA common way of filling this value is with a random 64-bit number.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Metadata describing an Operation.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The Google Cloud Project in which the job is scoped.",
          "type": "string"
        },
        "createTime": {
          "description": "The time at which the job was submitted to the Genomics service.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "The time at which the job began to run.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time at which the job stopped running.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request that started the operation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "events": {
          "description": "Optional event messages that were generated during the job's execution.\nThis also contains any warnings that were generated during import\nor export.",
          "type": "array",
          "items": {
            "$ref": "OperationEvent"
          }
        },
        "labels": {
          "description": "User-settable labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runtimeMetadata": {
          "description": "Runtime metadata on this Operation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationEvent": {
      "id": "OperationEvent",
      "description": "An event that occurred during an Operation.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Optional time of when event started.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Optional time of when event finished. An event can have a start time and no\nfinish time. If an event has a finish time, there must be a start time.",
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "A description of event in JSON-LD format.",
          "type": "string"
        }
      }
    },
    "RuntimeMetadata": {
      "id": "RuntimeMetadata",
      "description": "Runtime metadata that will be populated in the runtime_metadata field\nof an Operation associated with a RunWorkflow execution.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "list": {
              "id": "bio.projects.operations.list",
              "path": "v1/{+name}/operations",
              "flatPath": "v1/projects/{projectsId}/operations",
              "httpMethod": "GET",
              "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding below allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`.",
              "parameters": {
                "name": {
                  "description": "The name of the operation collection.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListOperationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "id": "bio.projects.operations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "httpMethod": "GET",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/operations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "cancel": {
              "id": "bio.projects.operations.cancel",
              "path": "v1/{+name}:cancel",
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}:cancel",
              "httpMethod": "POST",
              "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
              "parameters": {
                "name": {
                  "description": "The name of the operation resource to be cancelled.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/operations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "pipelines": {
          "methods": {
            "runDeepVariantV1alpha": {
              "id": "bio.projects.pipelines.runDeepVariantV1alpha",
              "path": "v1/projects/{projectId}/pipelines:runDeepVariantV1alpha",
              "flatPath": "v1/projects/{projectId}/pipelines:runDeepVariantV1alpha",
              "httpMethod": "POST",
              "description": "Run a DeepVariant pipeline.",
              "parameters": {
                "projectId": {
                  "description": "Required. The project associated with this DeepVariant pipeline run.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "projectId"
              ],
              "request": {
                "$ref": "RunDeepVariantV1alphaRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "basePath": ""
}