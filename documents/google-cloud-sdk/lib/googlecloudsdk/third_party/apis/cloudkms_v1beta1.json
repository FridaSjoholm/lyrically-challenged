{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "cloudkms:v1beta1",
  "name": "cloudkms",
  "canonicalName": "Cloud KMS",
  "version": "v1beta1",
  "revision": "0",
  "title": "Google Cloud KMS API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/kms/",
  "protocol": "rest",
  "rootUrl": "https://cloudkms.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://cloudkms.googleapis.com/",
  "batchPath": "batch",
  "version_module": "True",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListKeyRingsResponse": {
      "id": "ListKeyRingsResponse",
      "description": "Response message for KeyManagementService.ListKeyRings.",
      "type": "object",
      "properties": {
        "keyRings": {
          "description": "The list of KeyRings.",
          "type": "array",
          "items": {
            "$ref": "KeyRing"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in\nListKeyRingsRequest.page_token to retrieve the next page of results.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total number of KeyRings that matched the query.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "KeyRing": {
      "id": "KeyRing",
      "description": "A KeyRing is a toplevel logical grouping of CryptoKeys.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name for the KeyRing in the format\n`projects\/*\/locations\/*\/keyRings\/*`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which this KeyRing was created.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListCryptoKeysResponse": {
      "id": "ListCryptoKeysResponse",
      "description": "Response message for KeyManagementService.ListCryptoKeys.",
      "type": "object",
      "properties": {
        "cryptoKeys": {
          "description": "The list of CryptoKeys.",
          "type": "array",
          "items": {
            "$ref": "CryptoKey"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in\nListCryptoKeysRequest.page_token to retrieve the next page of results.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total number of CryptoKeys that matched the query.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CryptoKey": {
      "id": "CryptoKey",
      "description": "A CryptoKey represents a logical key that can be used for cryptographic\noperations.\n\nA CryptoKey is made up of one or more versions, which\nrepresent the actual key material used in cryptographic operations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name for this CryptoKey in the format\n`projects\/*\/locations\/*\/keyRings\/*\/cryptoKeys\/*`.",
          "type": "string"
        },
        "primary": {
          "description": "Output only. A copy of the \"primary\" CryptoKeyVersion that will be used\nby Encrypt when this CryptoKey is given\nin EncryptRequest.name.\n\nThe CryptoKey's primary version can be updated via\nUpdateCryptoKeyPrimaryVersion.",
          "$ref": "CryptoKeyVersion"
        },
        "purpose": {
          "description": "The immutable purpose of this CryptoKey. Currently, the only acceptable\npurpose is ENCRYPT_DECRYPT.",
          "enumDescriptions": [
            "Not specified.",
            "CryptoKeys with this purpose may be used with\nEncrypt and\nDecrypt."
          ],
          "type": "string",
          "enum": [
            "CRYPTO_KEY_PURPOSE_UNSPECIFIED",
            "ENCRYPT_DECRYPT"
          ]
        },
        "createTime": {
          "description": "Output only. The time at which this CryptoKey was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "nextRotationTime": {
          "description": "At next_rotation_time, the Key Management Service will automatically:\n\n1. Create a new version of this CryptoKey.\n2. Mark the new version as primary.\n\nKey rotations performed manually via\nCreateCryptoKeyVersion and\nUpdateCryptoKeyPrimaryVersion\ndo not affect next_rotation_time.",
          "type": "string",
          "format": "google-datetime"
        },
        "rotationPeriod": {
          "description": "next_rotation_time will be advanced by this period when the service\nautomatically rotates a key. Must be at least one day.\n\nIf rotation_period is set, next_rotation_time must also be set.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "CryptoKeyVersion": {
      "id": "CryptoKeyVersion",
      "description": "A CryptoKeyVersion represents an individual cryptographic key, and the\nassociated key material.\n\nIt can be used for cryptographic operations either directly, or via its\nparent CryptoKey, in which case the server will choose the appropriate\nversion for the operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name for this CryptoKeyVersion in the format\n`projects\/*\/locations\/*\/keyRings\/*\/cryptoKeys\/*\/cryptoKeyVersions\/*`.",
          "type": "string"
        },
        "state": {
          "description": "The current state of the CryptoKeyVersion.",
          "enumDescriptions": [
            "Not specified.",
            "This version may be used in Encrypt and\nDecrypt requests.",
            "This version may not be used, but the key material is still available,\nand the version can be placed back into the ENABLED state.",
            "This version is destroyed, and the key material is no longer stored.\nA version may not leave this state once entered.",
            "This version is scheduled for destruction, and will be destroyed soon.\nCall\nRestoreCryptoKeyVersion\nto put it back into the DISABLED state."
          ],
          "type": "string",
          "enum": [
            "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "DESTROYED",
            "DESTROY_SCHEDULED"
          ]
        },
        "createTime": {
          "description": "Output only. The time at which this CryptoKeyVersion was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "destroyTime": {
          "description": "Output only. The time this CryptoKeyVersion's key material is scheduled\nfor destruction. Only present if state is\nDESTROY_SCHEDULED.",
          "type": "string",
          "format": "google-datetime"
        },
        "destroyEventTime": {
          "description": "Output only. The time this CryptoKeyVersion's key material was\ndestroyed. Only present if state is\nDESTROYED.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListCryptoKeyVersionsResponse": {
      "id": "ListCryptoKeyVersionsResponse",
      "description": "Response message for KeyManagementService.ListCryptoKeyVersions.",
      "type": "object",
      "properties": {
        "cryptoKeyVersions": {
          "description": "The list of CryptoKeyVersions.",
          "type": "array",
          "items": {
            "$ref": "CryptoKeyVersion"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in\nListCryptoKeyVersionsRequest.page_token to retrieve the next page of\nresults.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total number of CryptoKeyVersions that matched the\nquery.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EncryptRequest": {
      "id": "EncryptRequest",
      "description": "Request message for KeyManagementService.Encrypt.",
      "type": "object",
      "properties": {
        "plaintext": {
          "description": "Required. The data to encrypt. Must be no larger than 64KiB.",
          "type": "string",
          "format": "byte"
        },
        "additionalAuthenticatedData": {
          "description": "Optional data that, if specified, must also be provided during decryption\nthrough DecryptRequest.additional_authenticated_data.  Must be no\nlarger than 64KiB.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "EncryptResponse": {
      "id": "EncryptResponse",
      "description": "Response message for KeyManagementService.Encrypt.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the CryptoKeyVersion used in encryption.",
          "type": "string"
        },
        "ciphertext": {
          "description": "The encrypted data.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "DecryptRequest": {
      "id": "DecryptRequest",
      "description": "Request message for KeyManagementService.Decrypt.",
      "type": "object",
      "properties": {
        "ciphertext": {
          "description": "Required. The encrypted data originally returned in\nEncryptResponse.ciphertext.",
          "type": "string",
          "format": "byte"
        },
        "additionalAuthenticatedData": {
          "description": "Optional data that must match the data originally supplied in\nEncryptRequest.additional_authenticated_data.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "DecryptResponse": {
      "id": "DecryptResponse",
      "description": "Response message for KeyManagementService.Decrypt.",
      "type": "object",
      "properties": {
        "plaintext": {
          "description": "The decrypted data originally supplied in EncryptRequest.plaintext.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "UpdateCryptoKeyPrimaryVersionRequest": {
      "id": "UpdateCryptoKeyPrimaryVersionRequest",
      "description": "Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion.",
      "type": "object",
      "properties": {
        "cryptoKeyVersionId": {
          "description": "The id of the child CryptoKeyVersion to use as primary.",
          "type": "string"
        }
      }
    },
    "DestroyCryptoKeyVersionRequest": {
      "id": "DestroyCryptoKeyVersionRequest",
      "description": "Request message for KeyManagementService.DestroyCryptoKeyVersion.",
      "type": "object",
      "properties": {
      }
    },
    "RestoreCryptoKeyVersionRequest": {
      "id": "RestoreCryptoKeyVersionRequest",
      "description": "Request message for KeyManagementService.RestoreCryptoKeyVersion.",
      "type": "object",
      "properties": {
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, a default\nmask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\",\n          ]\n        },\n        {\n          \"role\": \"roles\/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https:\/\/cloud.google.com\/iam).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Version of the `Policy`. The default version is 0.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\nMultiple `bindings` must not be specified for the same `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies audit logging configs for \"data access\".\n\"data access\": generally refers to data reads\/writes and admin reads.\n\"admin activity\": generally refers to admin writes.\n\nNote: `AuditConfig` doesn't apply to \"admin activity\", which always\nenables audit logging.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY\/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "type": "string",
          "format": "byte"
        },
        "iamOwned": {

          "type": "boolean"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.\nRequired",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Provides the configuration for non-admin_activity logging for a service.\nControls exemptions and specific log sub-types.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `resourcemanager`, `storage`, `compute`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "exemptedMembers": {
          "description": "Specifies the identities that are exempted from \"data access\" audit\nlogging for the `service` specified above.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditLogConfigs": {
          "description": "The configuration for each type of logging\nNext ID: 4",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for a sub-type of logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Log admin reads",
            "Log data writes",
            "Log data reads"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that are exempted from this type of logging\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "type": "string",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries is the same as for members in a\nBinding (see google\/iam\/v1\/policy.proto).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization."
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "Set-inclusion check.",
            "Set-exclusion check.",
            "Subject is discharged"
          ],
          "type": "string",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "value": {
          "description": "DEPRECATED. Use 'values' instead.",
          "type": "string"
        },
        "values": {
          "description": "The objects of the condition. This is mutually exclusive with 'value'.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write\nIncrement a streamz counter with the specified metric and field names.\n\nMetric names should start with a '\/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"\/iam\/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nAt present the only supported field names are\n   - \"iam_principal\", corresponding to IAMContext.principal;\n   - \"\" (empty string), resulting in one aggretated counter with no field.\n\nExamples:\n  counter { metric: \"\/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter \/iam\/policy\/backend_debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}\n\nAt this time we do not support:\n* multiple field names (though this may be supported in the future)\n* decrementing the counter\n* incrementing it by anything other than 1",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Options for counters",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "cloudkms.projects.locations.list",
              "path": "v1beta1/projects/{projectsId}/locations",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "projectsId": {
                  "description": "Part of `name`. The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "projectsId"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "id": "cloudkms.projects.locations.get",
              "path": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "description": "Get information about a location.",
              "parameters": {
                "projectsId": {
                  "description": "Part of `name`. Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "locationsId": {
                  "description": "Part of `name`. See documentation of `projectsId`.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "projectsId",
                "locationsId"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
          ,
          "resources": {
            "keyRings": {
              "methods": {
                "list": {
                  "id": "cloudkms.projects.locations.keyRings.list",
                  "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "httpMethod": "GET",
                  "description": "Lists KeyRings.",
                  "parameters": {
                    "projectsId": {
                      "description": "Part of `parent`. Required. The resource name of the location associated with the\nKeyRings, in the format `projects\/*\/locations\/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "locationsId": {
                      "description": "Part of `parent`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional limit on the number of KeyRings to include in the\nresponse.  Further KeyRings can subsequently be obtained by\nincluding the ListKeyRingsResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional pagination token, returned earlier via\nListKeyRingsResponse.next_page_token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectsId",
                    "locationsId"
                  ],
                  "response": {
                    "$ref": "ListKeyRingsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "cloudkms.projects.locations.keyRings.get",
                  "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}",
                  "httpMethod": "GET",
                  "description": "Returns metadata for a given KeyRing.",
                  "parameters": {
                    "projectsId": {
                      "description": "Part of `name`. The name of the KeyRing to get.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "locationsId": {
                      "description": "Part of `name`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "keyRingsId": {
                      "description": "Part of `name`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectsId",
                    "locationsId",
                    "keyRingsId"
                  ],
                  "response": {
                    "$ref": "KeyRing"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "id": "cloudkms.projects.locations.keyRings.create",
                  "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "httpMethod": "POST",
                  "description": "Create a new KeyRing in a given Project and Location.",
                  "parameters": {
                    "projectsId": {
                      "description": "Part of `parent`. Required. The resource name of the location associated with the\nKeyRings, in the format `projects\/*\/locations\/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "locationsId": {
                      "description": "Part of `parent`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "keyRingId": {
                      "description": "Required. It must be unique within a location and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectsId",
                    "locationsId"
                  ],
                  "request": {
                    "$ref": "KeyRing"
                  },
                  "response": {
                    "$ref": "KeyRing"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "id": "cloudkms.projects.locations.keyRings.setIamPolicy",
                  "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
                  "parameters": {
                    "projectsId": {
                      "description": "Part of `resource`. REQUIRED: The resource for which the policy is being specified.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects\/{project}`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "locationsId": {
                      "description": "Part of `resource`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "keyRingsId": {
                      "description": "Part of `resource`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectsId",
                    "locationsId",
                    "keyRingsId"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "id": "cloudkms.projects.locations.keyRings.getIamPolicy",
                  "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:getIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                  "parameters": {
                    "projectsId": {
                      "description": "Part of `resource`. REQUIRED: The resource for which the policy is being requested.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects\/{project}`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "locationsId": {
                      "description": "Part of `resource`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "keyRingsId": {
                      "description": "Part of `resource`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectsId",
                    "locationsId",
                    "keyRingsId"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "id": "cloudkms.projects.locations.keyRings.testIamPermissions",
                  "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:testIamPermissions",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.",
                  "parameters": {
                    "projectsId": {
                      "description": "Part of `resource`. REQUIRED: The resource for which the policy detail is being requested.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects\/{project}`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "locationsId": {
                      "description": "Part of `resource`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "keyRingsId": {
                      "description": "Part of `resource`. See documentation of `projectsId`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectsId",
                    "locationsId",
                    "keyRingsId"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
              ,
              "resources": {
                "cryptoKeys": {
                  "methods": {
                    "list": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.list",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "httpMethod": "GET",
                      "description": "Lists CryptoKeys.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `parent`. Required. The resource name of the KeyRing to list, in the format\n`projects\/*\/locations\/*\/keyRings\/*`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `parent`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `parent`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional limit on the number of CryptoKeys to include in the\nresponse.  Further CryptoKeys can subsequently be obtained by\nincluding the ListCryptoKeysResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional pagination token, returned earlier via\nListCryptoKeysResponse.next_page_token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId"
                      ],
                      "response": {
                        "$ref": "ListCryptoKeysResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.get",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "httpMethod": "GET",
                      "description": "Returns metadata for a given CryptoKey, as well as its\nprimary CryptoKeyVersion.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `name`. The name of the CryptoKey to get.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.create",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "httpMethod": "POST",
                      "description": "Create a new CryptoKey within a KeyRing.\n\nCryptoKey.purpose is required.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `parent`. Required. The name of the KeyRing associated with the\nCryptoKeys.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `parent`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `parent`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeyId": {
                          "description": "Required. It must be unique within a KeyRing and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId"
                      ],
                      "request": {
                        "$ref": "CryptoKey"
                      },
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "patch": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.patch",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "httpMethod": "PATCH",
                      "description": "Update a CryptoKey.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `cryptoKey.name`. Output only. The resource name for this CryptoKey in the format\n`projects\/*\/locations\/*\/keyRings\/*\/cryptoKeys\/*`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `cryptoKey.name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `cryptoKey.name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `cryptoKey.name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required list of fields to be updated in this request.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "request": {
                        "$ref": "CryptoKey"
                      },
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "encrypt": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:encrypt",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:encrypt",
                      "httpMethod": "POST",
                      "description": "Encrypt data, so that it can only be recovered by a call to Decrypt.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `name`. Required. The resource name of the CryptoKey or CryptoKeyVersion\nto use for encryption.\n\nIf a CryptoKey is specified, the server will use its\nprimary version.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "request": {
                        "$ref": "EncryptRequest"
                      },
                      "response": {
                        "$ref": "EncryptResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "decrypt": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:decrypt",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:decrypt",
                      "httpMethod": "POST",
                      "description": "Decrypt data that was protected by Encrypt.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `name`. Required. The resource name of the CryptoKey to use for decryption.\nThe server will choose the appropriate version.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "request": {
                        "$ref": "DecryptRequest"
                      },
                      "response": {
                        "$ref": "DecryptResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "updatePrimaryVersion": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:updatePrimaryVersion",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:updatePrimaryVersion",
                      "httpMethod": "POST",
                      "description": "Update the version of a CryptoKey that will be used in Encrypt",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `name`. The resource name of the CryptoKey to update.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `name`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "request": {
                        "$ref": "UpdateCryptoKeyPrimaryVersionRequest"
                      },
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "setIamPolicy": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:setIamPolicy",
                      "httpMethod": "POST",
                      "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `resource`. REQUIRED: The resource for which the policy is being specified.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects\/{project}`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "getIamPolicy": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:getIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:getIamPolicy",
                      "httpMethod": "GET",
                      "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `resource`. REQUIRED: The resource for which the policy is being requested.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects\/{project}`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions",
                      "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:testIamPermissions",
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.",
                      "parameters": {
                        "projectsId": {
                          "description": "Part of `resource`. REQUIRED: The resource for which the policy detail is being requested.\n`resource` is usually specified as a path. For example, a Project\nresource is specified as `projects\/{project}`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "locationsId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "keyRingsId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "cryptoKeysId": {
                          "description": "Part of `resource`. See documentation of `projectsId`.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectsId",
                        "locationsId",
                        "keyRingsId",
                        "cryptoKeysId"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                  ,
                  "resources": {
                    "cryptoKeyVersions": {
                      "methods": {
                        "list": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
                          "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "httpMethod": "GET",
                          "description": "Lists CryptoKeyVersions.",
                          "parameters": {
                            "projectsId": {
                              "description": "Part of `parent`. Required. The resource name of the CryptoKey to list, in the format\n`projects\/*\/locations\/*\/keyRings\/*\/cryptoKeys\/*`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "locationsId": {
                              "description": "Part of `parent`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "keyRingsId": {
                              "description": "Part of `parent`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeysId": {
                              "description": "Part of `parent`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional limit on the number of CryptoKeyVersions to\ninclude in the response. Further CryptoKeyVersions can\nsubsequently be obtained by including the\nListCryptoKeyVersionsResponse.next_page_token in a subsequent request.\nIf unspecified, the server will pick an appropriate default.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional pagination token, returned earlier via\nListCryptoKeyVersionsResponse.next_page_token.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "projectsId",
                            "locationsId",
                            "keyRingsId",
                            "cryptoKeysId"
                          ],
                          "response": {
                            "$ref": "ListCryptoKeyVersionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "get": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get",
                          "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "httpMethod": "GET",
                          "description": "Returns metadata for a given CryptoKeyVersion.",
                          "parameters": {
                            "projectsId": {
                              "description": "Part of `name`. The name of the CryptoKeyVersion to get.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "locationsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "keyRingsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeysId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeyVersionsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "projectsId",
                            "locationsId",
                            "keyRingsId",
                            "cryptoKeysId",
                            "cryptoKeyVersionsId"
                          ],
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "create": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
                          "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "httpMethod": "POST",
                          "description": "Create a new CryptoKeyVersion in a CryptoKey.\n\nThe server will assign the next sequential id. If unset,\nstate will be set to\nENABLED.",
                          "parameters": {
                            "projectsId": {
                              "description": "Part of `parent`. Required. The name of the CryptoKey associated with\nthe CryptoKeyVersions.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "locationsId": {
                              "description": "Part of `parent`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "keyRingsId": {
                              "description": "Part of `parent`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeysId": {
                              "description": "Part of `parent`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "projectsId",
                            "locationsId",
                            "keyRingsId",
                            "cryptoKeysId"
                          ],
                          "request": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "patch": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
                          "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "httpMethod": "PATCH",
                          "description": "Update a CryptoKeyVersion's metadata.\n\nstate may be changed between\nENABLED and\nDISABLED using this\nmethod. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to\nmove between other states.",
                          "parameters": {
                            "projectsId": {
                              "description": "Part of `cryptoKeyVersion.name`. Output only. The resource name for this CryptoKeyVersion in the format\n`projects\/*\/locations\/*\/keyRings\/*\/cryptoKeys\/*\/cryptoKeyVersions\/*`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "locationsId": {
                              "description": "Part of `cryptoKeyVersion.name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "keyRingsId": {
                              "description": "Part of `cryptoKeyVersion.name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeysId": {
                              "description": "Part of `cryptoKeyVersion.name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeyVersionsId": {
                              "description": "Part of `cryptoKeyVersion.name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "Required list of fields to be updated in this request.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            }
                          },
                          "parameterOrder": [
                            "projectsId",
                            "locationsId",
                            "keyRingsId",
                            "cryptoKeysId",
                            "cryptoKeyVersionsId"
                          ],
                          "request": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "destroy": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
                          "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:destroy",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:destroy",
                          "httpMethod": "POST",
                          "description": "Schedule a CryptoKeyVersion for destruction.\n\nUpon calling this method, CryptoKeyVersion.state will be set to\nDESTROY_SCHEDULED\nand destroy_time will be set to a time 24\nhours in the future, at which point the state\nwill be changed to\nDESTROYED, and the key\nmaterial will be irrevocably destroyed.\n\nBefore the destroy_time is reached,\nRestoreCryptoKeyVersion may be called to reverse the process.",
                          "parameters": {
                            "projectsId": {
                              "description": "Part of `name`. The resource name of the CryptoKeyVersion to destroy.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "locationsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "keyRingsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeysId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeyVersionsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "projectsId",
                            "locationsId",
                            "keyRingsId",
                            "cryptoKeysId",
                            "cryptoKeyVersionsId"
                          ],
                          "request": {
                            "$ref": "DestroyCryptoKeyVersionRequest"
                          },
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "restore": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
                          "path": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:restore",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:restore",
                          "httpMethod": "POST",
                          "description": "Restore a CryptoKeyVersion in the\nDESTROY_SCHEDULED,\nstate.\n\nUpon restoration of the CryptoKeyVersion, state\nwill be set to DISABLED,\nand destroy_time will be cleared.",
                          "parameters": {
                            "projectsId": {
                              "description": "Part of `name`. The resource name of the CryptoKeyVersion to restore.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "locationsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "keyRingsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeysId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cryptoKeyVersionsId": {
                              "description": "Part of `name`. See documentation of `projectsId`.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "projectsId",
                            "locationsId",
                            "keyRingsId",
                            "cryptoKeysId",
                            "cryptoKeyVersionsId"
                          ],
                          "request": {
                            "$ref": "RestoreCryptoKeyVersionRequest"
                          },
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}