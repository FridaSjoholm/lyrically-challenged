{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "bigtableadmin:v2",
  "name": "bigtableadmin",
  "canonicalName": "Bigtable Admin",
  "version": "v2",
  "revision": "0",
  "title": "Cloud Bigtable Admin API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/bigtable/",
  "protocol": "rest",
  "rootUrl": "https://bigtableadmin.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://bigtableadmin.googleapis.com/",
  "batchPath": "batch",
  "version_module": "True",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations\/some\/unique\/name`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https:\/\/github.com\/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security\/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CreateInstanceRequest": {
      "id": "CreateInstanceRequest",
      "description": "Request message for BigtableInstanceAdmin.CreateInstance.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "The unique name of the project in which to create the new instance.\nValues are of the form `projects\/<project>`.",
          "type": "string"
        },
        "instanceId": {
          "description": "The ID to be used when referring to the new instance within its project,\ne.g., just `myinstance` rather than\n`projects\/myproject\/instances\/myinstance`.",
          "type": "string"
        },
        "instance": {
          "description": "The instance to create.\nFields marked `OutputOnly` must be left blank.",
          "$ref": "Instance"
        },
        "clusters": {
          "description": "The clusters to be created within the instance, mapped by desired\ncluster ID, e.g., just `mycluster` rather than\n`projects\/myproject\/instances\/myinstance\/clusters\/mycluster`.\nFields marked `OutputOnly` must be left blank.\nCurrently exactly one cluster must be specified.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Cluster"
          }
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "description": "A collection of Bigtable Tables and\nthe resources that serve them.\nAll tables in an instance are served from a single\nCluster.",
      "type": "object",
      "properties": {
        "name": {
          "description": "(`OutputOnly`)\nThe unique name of the instance. Values are of the form\n`projects\/<project>\/instances\/a-z+[a-z0-9]`.",
          "type": "string"
        },
        "displayName": {
          "description": "The descriptive name for this instance as it appears in UIs.\nCan be changed at any time, but should be kept globally unique\nto avoid confusion.",
          "type": "string"
        },
        "state": {
          "description": "(`OutputOnly`)\nThe current state of the instance.",
          "enumDescriptions": [
            "The state of the instance could not be determined.",
            "The instance has been successfully created and can serve requests\nto its tables.",
            "The instance is currently being created, and may be destroyed\nif the creation process encounters an error."
          ],
          "type": "string",
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING"
          ]
        },
        "type": {
          "description": "The type of the instance. Defaults to `PRODUCTION`.",
          "enumDescriptions": [
            "The type of the instance is unspecified. If set when creating an\ninstance, a `PRODUCTION` instance will be created. If set when updating\nan instance, the type will be left unchanged.",
            "An instance meant for production use. `serve_nodes` must be set\non the cluster.",
            "The instance is meant for development purposes only.\nIt uses shared resources and has no performance or uptime guarantees.\nAfter a development instance is created, it can be upgraded by\nupdating the instance to type `PRODUCTION`. An instance created\nas a production instance cannot be changed to a development instance.\nWhen creating a development instance, `serve_nodes` on the cluster must\nnot be set."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRODUCTION",
            "DEVELOPMENT"
          ]
        }
      }
    },
    "Cluster": {
      "id": "Cluster",
      "description": "A resizable group of nodes in a particular cloud location, capable\nof serving all Tables in the parent\nInstance.",
      "type": "object",
      "properties": {
        "name": {
          "description": "(`OutputOnly`)\nThe unique name of the cluster. Values are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/a-z*`.",
          "type": "string"
        },
        "location": {
          "description": "(`CreationOnly`)\nThe location where this cluster's nodes and storage reside. For best\nperformance, clients should be located as close as possible to this cluster.\nCurrently only zones are supported, so values should be of the form\n`projects\/<project>\/locations\/<zone>`.",
          "type": "string"
        },
        "state": {
          "description": "(`OutputOnly`)\nThe current state of the cluster.",
          "enumDescriptions": [
            "The state of the cluster could not be determined.",
            "The cluster has been successfully created and is ready to serve requests.",
            "The cluster is currently being created, and may be destroyed\nif the creation process encounters an error.\nA cluster may not be able to serve requests while being created.",
            "The cluster is currently being resized, and may revert to its previous\nnode count if the process encounters an error.\nA cluster is still capable of serving requests while being resized,\nbut may exhibit performance as if its number of allocated nodes is\nbetween the starting and requested states.",
            "The cluster has no backing nodes. The data (tables) still\nexist, but no operations can be performed on the cluster."
          ],
          "type": "string",
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING",
            "RESIZING",
            "DISABLED"
          ]
        },
        "serveNodes": {
          "description": "The number of nodes allocated to this cluster. More nodes enable higher\nthroughput and more consistent performance.",
          "type": "integer",
          "format": "int32"
        },
        "defaultStorageType": {
          "description": "(`CreationOnly`)\nThe type of storage used by this cluster to serve its\nparent instance's tables, unless explicitly overridden.",
          "enumDescriptions": [
            "The user did not specify a storage type.",
            "Flash (SSD) storage should be used.",
            "Magnetic drive (HDD) storage should be used."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        }
      }
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "description": "Response message for BigtableInstanceAdmin.ListInstances.",
      "type": "object",
      "properties": {
        "instances": {
          "description": "The list of requested instances.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        },
        "failedLocations": {
          "description": "Locations from which Instance information could not be retrieved,\ndue to an outage or some other transient condition.\nInstances whose Clusters are all in one of the failed locations\nmay be missing from `instances`, and Instances with at least one\nCluster in a failed location may only have partial information returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Set if not all instances could be returned in a single response.\nPass this value to `page_token` in another request to get the next\npage of results.",
          "type": "string"
        }
      }
    },
    "ListClustersResponse": {
      "id": "ListClustersResponse",
      "description": "Response message for BigtableInstanceAdmin.ListClusters.",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "The list of requested clusters.",
          "type": "array",
          "items": {
            "$ref": "Cluster"
          }
        },
        "failedLocations": {
          "description": "Locations from which Cluster information could not be retrieved,\ndue to an outage or some other transient condition.\nClusters from these locations may be missing from `clusters`,\nor may only have partial information returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Set if not all clusters could be returned in a single response.\nPass this value to `page_token` in another request to get the next\npage of results.",
          "type": "string"
        }
      }
    },
    "CreateTableRequest": {
      "id": "CreateTableRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.CreateTable",
      "type": "object",
      "properties": {
        "tableId": {
          "description": "The name by which the new table should be referred to within the parent\ninstance, e.g., `foobar` rather than `<parent>\/tables\/foobar`.",
          "type": "string"
        },
        "table": {
          "description": "The Table to create.",
          "$ref": "Table"
        },
        "initialSplits": {
          "description": "The optional list of row keys that will be used to initially split the\ntable into several tablets (tablets are similar to HBase regions).\nGiven two split keys, `s1` and `s2`, three tablets will be created,\nspanning the key ranges: `[, s1), [s1, s2), [s2, )`.\n\nExample:\n\n* Row keys := `[\"a\", \"apple\", \"custom\", \"customer_1\", \"customer_2\",`\n               `\"other\", \"zz\"]`\n* initial_split_keys := `[\"apple\", \"customer_1\", \"customer_2\", \"other\"]`\n* Key assignment:\n    - Tablet 1 `[, apple)                => {\"a\"}.`\n    - Tablet 2 `[apple, customer_1)      => {\"apple\", \"custom\"}.`\n    - Tablet 3 `[customer_1, customer_2) => {\"customer_1\"}.`\n    - Tablet 4 `[customer_2, other)      => {\"customer_2\"}.`\n    - Tablet 5 `[other, )                => {\"other\", \"zz\"}.`",
          "type": "array",
          "items": {
            "$ref": "Split"
          }
        }
      }
    },
    "Table": {
      "id": "Table",
      "description": "A collection of user data indexed by row, column, and timestamp.\nEach table is served using the resources of its parent cluster.",
      "type": "object",
      "properties": {
        "name": {
          "description": "(`OutputOnly`)\nThe unique name of the table. Values are of the form\n`projects\/<project>\/instances\/<instance>\/tables\/_a-zA-Z0-9*`.\nViews: `NAME_ONLY`, `SCHEMA_VIEW`, `FULL`",
          "type": "string"
        },
        "columnFamilies": {
          "description": "(`CreationOnly`)\nThe column families configured for this table, mapped by column family ID.\nViews: `SCHEMA_VIEW`, `FULL`",
          "type": "object",
          "additionalProperties": {
            "$ref": "ColumnFamily"
          }
        },
        "granularity": {
          "description": "(`CreationOnly`)\nThe granularity (e.g. `MILLIS`, `MICROS`) at which timestamps are stored in\nthis table. Timestamps not matching the granularity will be rejected.\nIf unspecified at creation time, the value will be set to `MILLIS`.\nViews: `SCHEMA_VIEW`, `FULL`",
          "enumDescriptions": [
            "The user did not specify a granularity. Should not be returned.\nWhen specified during table creation, MILLIS will be used.",
            "The table keeps data versioned at a granularity of 1ms."
          ],
          "type": "string",
          "enum": [
            "TIMESTAMP_GRANULARITY_UNSPECIFIED",
            "MILLIS"
          ]
        }
      }
    },
    "ColumnFamily": {
      "id": "ColumnFamily",
      "description": "A set of columns within a table which share a common configuration.",
      "type": "object",
      "properties": {
        "gcRule": {
          "description": "Garbage collection rule specified as a protobuf.\nMust serialize to at most 500 bytes.\n\nNOTE: Garbage collection executes opportunistically in the background, and\nso it's possible for reads to return a cell even if it matches the active\nGC expression for its family.",
          "$ref": "GcRule"
        }
      }
    },
    "GcRule": {
      "id": "GcRule",
      "description": "Rule for determining which cells to delete during garbage collection.",
      "type": "object",
      "properties": {
        "maxNumVersions": {
          "description": "Delete all cells in a column except the most recent N.",
          "type": "integer",
          "format": "int32"
        },
        "maxAge": {
          "description": "Delete cells in a column older than the given age.\nValues must be at least one millisecond, and will be truncated to\nmicrosecond granularity.",
          "type": "string",
          "format": "google-duration"
        },
        "intersection": {
          "description": "Delete cells that would be deleted by every nested rule.",
          "$ref": "Intersection"
        },
        "union": {
          "description": "Delete cells that would be deleted by any nested rule.",
          "$ref": "Union"
        }
      }
    },
    "Intersection": {
      "id": "Intersection",
      "description": "A GcRule which deletes cells matching all of the given rules.",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Only delete cells which would be deleted by every element of `rules`.",
          "type": "array",
          "items": {
            "$ref": "GcRule"
          }
        }
      }
    },
    "Union": {
      "id": "Union",
      "description": "A GcRule which deletes cells matching any of the given rules.",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Delete cells which would be deleted by any element of `rules`.",
          "type": "array",
          "items": {
            "$ref": "GcRule"
          }
        }
      }
    },
    "Split": {
      "id": "Split",
      "description": "An initial split point for a newly created table.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Row key to use as an initial tablet boundary.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "CreateTableFromSnapshotRequest": {
      "id": "CreateTableFromSnapshotRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot",
      "type": "object",
      "properties": {
        "tableId": {
          "description": "The name by which the new table should be referred to within the parent\ninstance, e.g., `foobar` rather than `<parent>\/tables\/foobar`.",
          "type": "string"
        },
        "sourceSnapshot": {
          "description": "The unique name of the snapshot from which to restore the table. The\nsnapshot and the table must be in the same instance.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>\/snapshots\/<snapshot>`.",
          "type": "string"
        }
      }
    },
    "ListTablesResponse": {
      "id": "ListTablesResponse",
      "description": "Response message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.ListTables",
      "type": "object",
      "properties": {
        "tables": {
          "description": "The tables present in the requested instance.",
          "type": "array",
          "items": {
            "$ref": "Table"
          }
        },
        "nextPageToken": {
          "description": "Set if not all tables could be returned in a single response.\nPass this value to `page_token` in another request to get the next\npage of results.",
          "type": "string"
        }
      }
    },
    "ModifyColumnFamiliesRequest": {
      "id": "ModifyColumnFamiliesRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies",
      "type": "object",
      "properties": {
        "modifications": {
          "description": "Modifications to be atomically applied to the specified table's families.\nEntries are applied in order, meaning that earlier modifications can be\nmasked by later ones (in the case of repeated updates to the same family,\nfor example).",
          "type": "array",
          "items": {
            "$ref": "Modification"
          }
        }
      }
    },
    "Modification": {
      "id": "Modification",
      "description": "A create, update, or delete of a particular column family.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the column family to be modified.",
          "type": "string"
        },
        "create": {
          "description": "Create a new column family with the specified schema, or fail if\none already exists with the given ID.",
          "$ref": "ColumnFamily"
        },
        "update": {
          "description": "Update an existing column family to the specified schema, or fail\nif no column family exists with the given ID.",
          "$ref": "ColumnFamily"
        },
        "drop": {
          "description": "Drop (delete) the column family with the given ID, or fail if no such\nfamily exists.",
          "type": "boolean"
        }
      }
    },
    "DropRowRangeRequest": {
      "id": "DropRowRangeRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.DropRowRange",
      "type": "object",
      "properties": {
        "rowKeyPrefix": {
          "description": "Delete all rows that start with this row key prefix. Prefix cannot be\nzero length.",
          "type": "string",
          "format": "byte"
        },
        "deleteAllDataFromTable": {
          "description": "Delete all rows in the table. Setting this to false is a no-op.",
          "type": "boolean"
        }
      }
    },
    "SnapshotTableRequest": {
      "id": "SnapshotTableRequest",
      "description": "Request message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable",
      "type": "object",
      "properties": {
        "cluster": {
          "description": "The name of the cluster where the snapshot will be created in.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>`.",
          "type": "string"
        },
        "snapshotId": {
          "description": "The ID by which the new snapshot should be referred to within the parent\ncluster, e.g., `mysnapshot` of the form: `_a-zA-Z0-9*`\nrather than `projects\/<project>\/instances\/<instance>\/clusters\/<cluster>\/snapshots\/mysnapshot`.",
          "type": "string"
        },
        "ttl": {
          "description": "The amount of time that the new snapshot can stay active after it is\ncreated. Once 'ttl' expires, the snapshot will get deleted. The maximum\namount of time a snapshot can stay active is 365 days. If 'ttl' is not\nspecified, the default maximum of 365 days will be used.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "Snapshot": {
      "id": "Snapshot",
      "description": "A snapshot of a table at a particular time. A snapshot can be used as a\ncheckpoint for data restoration or a data source for a new table.",
      "type": "object",
      "properties": {
        "name": {
          "description": "(`OutputOnly`)\nThe unique name of the snapshot.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>\/snapshots\/<snapshot>`.",
          "type": "string"
        },
        "sourceTable": {
          "description": "(`OutputOnly`)\nThe source table at the time the snapshot was taken.",
          "$ref": "Table"
        },
        "dataSizeBytes": {
          "description": "(`OutputOnly`)\nThe size of the data in the source table at the time the snapshot was\ntaken.",
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "description": "(`OutputOnly`)\nThe time when the snapshot is created.",
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "(`OutputOnly`)\nThe time when the snapshot will be deleted. The maximum amount of time a\nsnapshot can stay active is 365 days. If 'ttl' is not specified,\nthe default maximum of 365 days will be used.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListSnapshotsResponse": {
      "id": "ListSnapshotsResponse",
      "description": "Response message for\ngoogle.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots",
      "type": "object",
      "properties": {
        "snapshots": {
          "description": "The snapshots present in the requested cluster.",
          "type": "array",
          "items": {
            "$ref": "Snapshot"
          }
        },
        "nextPageToken": {
          "description": "Set if not all snapshots could be returned in a single response.\nPass this value to `page_token` in another request to get the next\npage of results.",
          "type": "string"
        }
      }
    },
    "CreateInstanceMetadata": {
      "id": "CreateInstanceMetadata",
      "description": "The metadata for the Operation returned by CreateInstance.",
      "type": "object",
      "properties": {
        "originalRequest": {
          "description": "The request that prompted the initiation of this CreateInstance operation.",
          "$ref": "CreateInstanceRequest"
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "UpdateClusterMetadata": {
      "id": "UpdateClusterMetadata",
      "description": "The metadata for the Operation returned by UpdateCluster.",
      "type": "object",
      "properties": {
        "originalRequest": {
          "description": "The request that prompted the initiation of this UpdateCluster operation.",
          "$ref": "Cluster"
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    }
  },
  "resources": {
    "operations": {
      "methods": {
        "list": {
          "id": "bigtableadmin.operations.list",
          "path": "v2/{+name}",
          "flatPath": "v2/operations",
          "httpMethod": "GET",
          "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding below allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`.",
          "parameters": {
            "name": {
              "description": "The name of the operation collection.",
              "location": "path",
              "required": true,
              "pattern": "^operations$",
              "type": "string"
            },
            "filter": {
              "description": "The standard list filter.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "The standard list page size.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The standard list page token.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "get": {
          "id": "bigtableadmin.operations.get",
          "path": "v2/{+name}",
          "flatPath": "v2/operations/{operationsId}",
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ]
        },
        "delete": {
          "id": "bigtableadmin.operations.delete",
          "path": "v2/{+name}",
          "flatPath": "v2/operations/{operationsId}",
          "httpMethod": "DELETE",
          "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be deleted.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "cancel": {
          "id": "bigtableadmin.operations.cancel",
          "path": "v2/{+name}:cancel",
          "flatPath": "v2/operations/{operationsId}:cancel",
          "httpMethod": "POST",
          "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "create": {
              "id": "bigtableadmin.projects.instances.create",
              "path": "v2/{+parent}/instances",
              "flatPath": "v2/projects/{projectsId}/instances",
              "httpMethod": "POST",
              "description": "Create an instance within a project.",
              "parameters": {
                "parent": {
                  "description": "The unique name of the project in which to create the new instance.\nValues are of the form `projects\/<project>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CreateInstanceRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "id": "bigtableadmin.projects.instances.get",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "httpMethod": "GET",
              "description": "Gets information about an instance.",
              "parameters": {
                "name": {
                  "description": "The unique name of the requested instance. Values are of the form\n`projects\/<project>\/instances\/<instance>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Instance"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "list": {
              "id": "bigtableadmin.projects.instances.list",
              "path": "v2/{+parent}/instances",
              "flatPath": "v2/projects/{projectsId}/instances",
              "httpMethod": "GET",
              "description": "Lists information about instances in a project.",
              "parameters": {
                "parent": {
                  "description": "The unique name of the project for which a list of instances is requested.\nValues are of the form `projects\/<project>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageToken": {
                  "description": "The value of `next_page_token` returned by a previous call.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListInstancesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "update": {
              "id": "bigtableadmin.projects.instances.update",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "httpMethod": "PUT",
              "description": "Updates an instance within a project.",
              "parameters": {
                "name": {
                  "description": "(`OutputOnly`)\nThe unique name of the instance. Values are of the form\n`projects\/<project>\/instances\/a-z+[a-z0-9]`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Instance"
              },
              "response": {
                "$ref": "Instance"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "id": "bigtableadmin.projects.instances.delete",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "httpMethod": "DELETE",
              "description": "Delete an instance from a project.",
              "parameters": {
                "name": {
                  "description": "The unique name of the instance to be deleted.\nValues are of the form `projects\/<project>\/instances\/<instance>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
          ,
          "resources": {
            "clusters": {
              "methods": {
                "create": {
                  "id": "bigtableadmin.projects.instances.clusters.create",
                  "path": "v2/{+parent}/clusters",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters",
                  "httpMethod": "POST",
                  "description": "Creates a cluster within an instance.",
                  "parameters": {
                    "parent": {
                      "description": "The unique name of the instance in which to create the new cluster.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/a-z*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    },
                    "clusterId": {
                      "description": "The ID to be used when referring to the new cluster within its instance,\ne.g., just `mycluster` rather than\n`projects\/myproject\/instances\/myinstance\/clusters\/mycluster`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "bigtableadmin.projects.instances.clusters.get",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "httpMethod": "GET",
                  "description": "Gets information about a cluster.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the requested cluster. Values are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/clusters\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Cluster"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "list": {
                  "id": "bigtableadmin.projects.instances.clusters.list",
                  "path": "v2/{+parent}/clusters",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters",
                  "httpMethod": "GET",
                  "description": "Lists information about clusters in an instance.",
                  "parameters": {
                    "parent": {
                      "description": "The unique name of the instance for which a list of clusters is requested.\nValues are of the form `projects\/<project>\/instances\/<instance>`.\nUse `<instance> = '-'` to list Clusters for all Instances in a project,\ne.g., `projects\/myproject\/instances\/-`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The value of `next_page_token` returned by a previous call.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "update": {
                  "id": "bigtableadmin.projects.instances.clusters.update",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "httpMethod": "PUT",
                  "description": "Updates a cluster within an instance.",
                  "parameters": {
                    "name": {
                      "description": "(`OutputOnly`)\nThe unique name of the cluster. Values are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/a-z*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/clusters\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "bigtableadmin.projects.instances.clusters.delete",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a cluster from an instance.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the cluster to be deleted. Values are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/clusters\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
              ,
              "resources": {
                "snapshots": {
                  "methods": {
                    "get": {
                      "id": "bigtableadmin.projects.instances.clusters.snapshots.get",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/snapshots/{snapshotsId}",
                      "httpMethod": "GET",
                      "description": "Gets metadata information about the specified snapshot.",
                      "parameters": {
                        "name": {
                          "description": "The unique name of the requested snapshot.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>\/snapshots\/<snapshot>`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/clusters\/[^\/]+\/snapshots\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Snapshot"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "id": "bigtableadmin.projects.instances.clusters.snapshots.list",
                      "path": "v2/{+parent}/snapshots",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/snapshots",
                      "httpMethod": "GET",
                      "description": "Lists all snapshots associated with the specified cluster.",
                      "parameters": {
                        "parent": {
                          "description": "The unique name of the cluster for which snapshots should be listed.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/clusters\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of snapshots to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The value of `next_page_token` returned by a previous call.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListSnapshotsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "id": "bigtableadmin.projects.instances.clusters.snapshots.delete",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/snapshots/{snapshotsId}",
                      "httpMethod": "DELETE",
                      "description": "Permanently deletes the specified snapshot.",
                      "parameters": {
                        "name": {
                          "description": "The unique name of the snapshot to be deleted.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/clusters\/<cluster>\/snapshots\/<snapshot>`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/clusters\/[^\/]+\/snapshots\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "tables": {
              "methods": {
                "create": {
                  "id": "bigtableadmin.projects.instances.tables.create",
                  "path": "v2/{+parent}/tables",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables",
                  "httpMethod": "POST",
                  "description": "Creates a new table in the specified instance.\nThe table can be created with a full set of initial column families,\nspecified in the request.",
                  "parameters": {
                    "parent": {
                      "description": "The unique name of the instance in which to create the table.\nValues are of the form `projects\/<project>\/instances\/<instance>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "CreateTableRequest"
                  },
                  "response": {
                    "$ref": "Table"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "createFromSnapshot": {
                  "id": "bigtableadmin.projects.instances.tables.createFromSnapshot",
                  "path": "v2/{+parent}/tables:createFromSnapshot",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables:createFromSnapshot",
                  "httpMethod": "POST",
                  "description": "Creates a new table from the specified snapshot. The target table must\nnot exist. The snapshot and the table must be in the same instance.",
                  "parameters": {
                    "parent": {
                      "description": "The unique name of the instance in which to create the table.\nValues are of the form `projects\/<project>\/instances\/<instance>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "CreateTableFromSnapshotRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "bigtableadmin.projects.instances.tables.list",
                  "path": "v2/{+parent}/tables",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables",
                  "httpMethod": "GET",
                  "description": "Lists all tables served from a specified instance.",
                  "parameters": {
                    "parent": {
                      "description": "The unique name of the instance for which tables should be listed.\nValues are of the form `projects\/<project>\/instances\/<instance>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    },
                    "view": {
                      "description": "The view to be applied to the returned tables' fields.\nDefaults to `NAME_ONLY` if unspecified; no others are currently supported.",
                      "location": "query",
                      "type": "string",
                      "enum": [
                        "VIEW_UNSPECIFIED",
                        "NAME_ONLY",
                        "SCHEMA_VIEW",
                        "FULL"
                      ]
                    },
                    "pageToken": {
                      "description": "The value of `next_page_token` returned by a previous call.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTablesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "get": {
                  "id": "bigtableadmin.projects.instances.tables.get",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "httpMethod": "GET",
                  "description": "Gets metadata information about the specified table.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the requested table.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/tables\/<table>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/tables\/[^\/]+$",
                      "type": "string"
                    },
                    "view": {
                      "description": "The view to be applied to the returned table's fields.\nDefaults to `SCHEMA_ONLY` if unspecified.",
                      "location": "query",
                      "type": "string",
                      "enum": [
                        "VIEW_UNSPECIFIED",
                        "NAME_ONLY",
                        "SCHEMA_VIEW",
                        "FULL"
                      ]
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Table"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "delete": {
                  "id": "bigtableadmin.projects.instances.tables.delete",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "httpMethod": "DELETE",
                  "description": "Permanently deletes a specified table and all of its data.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the table to be deleted.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/tables\/<table>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/tables\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "modifyColumnFamilies": {
                  "id": "bigtableadmin.projects.instances.tables.modifyColumnFamilies",
                  "path": "v2/{+name}:modifyColumnFamilies",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:modifyColumnFamilies",
                  "httpMethod": "POST",
                  "description": "Atomically performs a series of column family modifications\non the specified table.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the table whose families should be modified.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/tables\/<table>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/tables\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ModifyColumnFamiliesRequest"
                  },
                  "response": {
                    "$ref": "Table"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "dropRowRange": {
                  "id": "bigtableadmin.projects.instances.tables.dropRowRange",
                  "path": "v2/{+name}:dropRowRange",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:dropRowRange",
                  "httpMethod": "POST",
                  "description": "Permanently drop\/delete a row range from a specified table. The request can\nspecify whether to delete all rows in a table, or only those that match a\nparticular prefix.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the table on which to drop a range of rows.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/tables\/<table>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/tables\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DropRowRangeRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "snapshot": {
                  "id": "bigtableadmin.projects.instances.tables.snapshot",
                  "path": "v2/{+name}:snapshot",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:snapshot",
                  "httpMethod": "POST",
                  "description": "Creates a new snapshot in the specified cluster from the specified\nsource table. The cluster and the table must be in the same instance.",
                  "parameters": {
                    "name": {
                      "description": "The unique name of the table to have the snapshot taken.\nValues are of the form\n`projects\/<project>\/instances\/<instance>\/tables\/<table>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/instances\/[^\/]+\/tables\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SnapshotTableRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}